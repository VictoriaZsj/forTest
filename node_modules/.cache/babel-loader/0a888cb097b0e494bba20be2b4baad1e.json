{"remainingRequest":"/Users/zhengsijieZoe/Documents/vue/forTest/node_modules/babel-loader/lib/index.js??ref--30-1!/Users/zhengsijieZoe/Documents/vue/forTest/node_modules/eslint-loader/index.js??ref--13-0!/Users/zhengsijieZoe/Documents/vue/forTest/src/api/tool.js","dependencies":[{"path":"/Users/zhengsijieZoe/Documents/vue/forTest/src/api/tool.js","mtime":1559125048643},{"path":"/Users/zhengsijieZoe/Documents/vue/forTest/node_modules/cache-loader/dist/cjs.js","mtime":1554197108130},{"path":"/Users/zhengsijieZoe/Documents/vue/forTest/node_modules/babel-loader/lib/index.js","mtime":1554197108029},{"path":"/Users/zhengsijieZoe/Documents/vue/forTest/node_modules/eslint-loader/index.js","mtime":1554197108688}],"contextDependencies":[],"result":["import _toConsumableArray from \"/Users/zhengsijieZoe/Documents/vue/forTest/node_modules/@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nexport default {\n  //数组去重\n  uniq1: function uniq1(array) {\n    var temp = []; //一个新的临时数组\n\n    for (var i = 0; i < array.length; i++) {\n      if (temp.indexOf(array[i]) == -1) {\n        temp.push(array[i]);\n      }\n    }\n\n    return temp;\n  },\n  uniq2: function uniq2(arr) {\n    // var temp = {}, r = [], len = array.length, val, type;\n    //     // for (var i = 0; i < len; i++) {\n    //     //   val = array[i];\n    //     //   type = typeof val;\n    //     //   if (!temp[val]) {\n    //     //     temp[val] = [type];\n    //     //     r.push(val);\n    //     //   } else if (temp[val].indexOf(type) < 0) {\n    //     //     temp[val].push(type);\n    //     //     r.push(val);\n    //     //   }\n    //     // }\n    //     // return r;\n    //用键值来判断，新建一个对象\n    var hashTable = {};\n    var data = [];\n\n    for (var i = 0, l = arr.length; i < l; i++) {\n      if (!hashTable[arr[i]]) {\n        hashTable[arr[i]] = true;\n        data.push(arr[i]);\n      }\n    }\n\n    return data;\n  },\n  //统计一个字符串出现最多的字母\n  findMaxDuplicateChar: function findMaxDuplicateChar(str) {\n    if (str.length == 1) {\n      return str;\n    }\n\n    var charObj = {};\n\n    for (var i = 0; i < str.length; i++) {\n      if (!charObj[str.charAt(i)]) {\n        charObj[str.charAt(i)] = 1;\n      } else {\n        charObj[str.charAt(i)] += 1;\n      }\n    }\n\n    var maxChar = '',\n        maxValue = 1;\n\n    for (var k in charObj) {\n      if (charObj[k] >= maxValue) {\n        maxChar = k;\n        maxValue = charObj[k];\n      }\n    }\n\n    return maxChar;\n  },\n  //冒泡排序\n  bubbleSort: function bubbleSort(arr, sequence) {\n    for (var i = 0; i < arr.length - 1; i++) {\n      //i是从索引为零开始到数组的倒数第二个\n      for (var j = 0; j < arr.length - i - 1; j++) {\n        //j是从索引为0开始到\n        if (sequence === 1) {\n          if (arr[j] > arr[j + 1]) {\n            var temp = arr[j];\n            arr[j] = arr[j + 1];\n            arr[j + 1] = temp;\n          } //从小到大排序\n\n        } else if (sequence === 2) {\n          if (arr[j] < arr[j + 1]) {\n            var temp = arr[j];\n            arr[j] = arr[j + 1];\n            arr[j + 1] = temp;\n          } //从大到小排序\n\n        }\n      }\n    }\n\n    return arr;\n  },\n  //快速排序\n  quickSort: function quickSort(arr) {\n    if (arr.length < 1) {\n      return arr;\n    }\n\n    ;\n    var q = arr[0];\n    var leftArr = [];\n    var rightArr = [];\n\n    for (var i = 1; i < arr.length; i++) {\n      if (arr[i] < q) {\n        leftArr.push(arr[i]);\n      } else {\n        rightArr.push(arr[i]);\n      }\n    }\n\n    return [].concat(_toConsumableArray(this.quickSort(leftArr)), [q], _toConsumableArray(this.quickSort(rightArr)));\n  },\n  //生成随机字符串\n  randomStr: function randomStr(len) {\n    len = len || 32;\n    var chars = 'ABCDEFGHJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz12345678';\n    var maxPos = chars.length;\n    var pwd = '';\n\n    for (var i = 0; i < len; i++) {\n      pwd += chars.charAt(Math.floor(Math.random() * maxPos));\n    }\n\n    return pwd;\n  },\n  isEmptyObject: function isEmptyObject(obj) {\n    var name;\n\n    for (name in obj) {\n      return false;\n    }\n\n    return true;\n  }\n};",{"version":3,"sources":["/Users/zhengsijieZoe/Documents/vue/forTest/src/api/tool.js"],"names":["uniq1","array","temp","i","length","indexOf","push","uniq2","arr","hashTable","data","l","findMaxDuplicateChar","str","charObj","charAt","maxChar","maxValue","k","bubbleSort","sequence","j","quickSort","q","leftArr","rightArr","randomStr","len","chars","maxPos","pwd","Math","floor","random","isEmptyObject","obj","name"],"mappings":";AACA,eAAe;AACb;AACAA,EAAAA,KAAK,EAAE,eAAUC,KAAV,EAAiB;AACtB,QAAIC,IAAI,GAAG,EAAX,CADsB,CACP;;AACf,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,KAAK,CAACG,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;AACrC,UAAID,IAAI,CAACG,OAAL,CAAaJ,KAAK,CAACE,CAAD,CAAlB,KAA0B,CAAC,CAA/B,EAAkC;AAChCD,QAAAA,IAAI,CAACI,IAAL,CAAUL,KAAK,CAACE,CAAD,CAAf;AACD;AACF;;AACD,WAAOD,IAAP;AACD,GAVY;AAWbK,EAAAA,KAAK,EAAC,eAAUC,GAAV,EAAc;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAIC,SAAS,GAAG,EAAhB;AACA,QAAIC,IAAI,GAAG,EAAX;;AACA,SAAI,IAAIP,CAAC,GAAC,CAAN,EAAQQ,CAAC,GAACH,GAAG,CAACJ,MAAlB,EAAyBD,CAAC,GAACQ,CAA3B,EAA6BR,CAAC,EAA9B,EAAkC;AAChC,UAAG,CAACM,SAAS,CAACD,GAAG,CAACL,CAAD,CAAJ,CAAb,EAAuB;AACrBM,QAAAA,SAAS,CAACD,GAAG,CAACL,CAAD,CAAJ,CAAT,GAAoB,IAApB;AACAO,QAAAA,IAAI,CAACJ,IAAL,CAAUE,GAAG,CAACL,CAAD,CAAb;AACD;AACF;;AACD,WAAOO,IAAP;AACD,GAnCY;AAoCf;AACEE,EAAAA,oBAAoB,EAAC,8BAAUC,GAAV,EAAe;AAClC,QAAGA,GAAG,CAACT,MAAJ,IAAc,CAAjB,EAAoB;AAClB,aAAOS,GAAP;AACD;;AACD,QAAIC,OAAO,GAAG,EAAd;;AACA,SAAI,IAAIX,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACU,GAAG,CAACT,MAAlB,EAAyBD,CAAC,EAA1B,EAA8B;AAC5B,UAAG,CAACW,OAAO,CAACD,GAAG,CAACE,MAAJ,CAAWZ,CAAX,CAAD,CAAX,EAA4B;AAC1BW,QAAAA,OAAO,CAACD,GAAG,CAACE,MAAJ,CAAWZ,CAAX,CAAD,CAAP,GAAyB,CAAzB;AACD,OAFD,MAEK;AACHW,QAAAA,OAAO,CAACD,GAAG,CAACE,MAAJ,CAAWZ,CAAX,CAAD,CAAP,IAA0B,CAA1B;AACD;AACF;;AACD,QAAIa,OAAO,GAAG,EAAd;AAAA,QACEC,QAAQ,GAAG,CADb;;AAEA,SAAI,IAAIC,CAAR,IAAaJ,OAAb,EAAsB;AACpB,UAAGA,OAAO,CAACI,CAAD,CAAP,IAAcD,QAAjB,EAA2B;AACzBD,QAAAA,OAAO,GAAGE,CAAV;AACAD,QAAAA,QAAQ,GAAGH,OAAO,CAACI,CAAD,CAAlB;AACD;AACF;;AACD,WAAOF,OAAP;AACH,GA1Dc;AA2Df;AACEG,EAAAA,UAAU,EAAC,oBAASX,GAAT,EAAaY,QAAb,EAAsB;AAC/B,SAAI,IAAIjB,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACK,GAAG,CAACJ,MAAJ,GAAW,CAAzB,EAA2BD,CAAC,EAA5B,EAA+B;AAAC;AAC9B,WAAI,IAAIkB,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACb,GAAG,CAACJ,MAAJ,GAAWD,CAAX,GAAa,CAA3B,EAA6BkB,CAAC,EAA9B,EAAiC;AAAC;AAChC,YAAGD,QAAQ,KAAG,CAAd,EAAgB;AACd,cAAGZ,GAAG,CAACa,CAAD,CAAH,GAAOb,GAAG,CAACa,CAAC,GAAC,CAAH,CAAb,EAAoB;AAClB,gBAAInB,IAAI,GAACM,GAAG,CAACa,CAAD,CAAZ;AACAb,YAAAA,GAAG,CAACa,CAAD,CAAH,GAAOb,GAAG,CAACa,CAAC,GAAC,CAAH,CAAV;AACAb,YAAAA,GAAG,CAACa,CAAC,GAAC,CAAH,CAAH,GAASnB,IAAT;AACD,WALa,CAKb;;AACF,SAND,MAMM,IAAGkB,QAAQ,KAAG,CAAd,EAAgB;AACpB,cAAGZ,GAAG,CAACa,CAAD,CAAH,GAAOb,GAAG,CAACa,CAAC,GAAC,CAAH,CAAb,EAAoB;AAClB,gBAAInB,IAAI,GAACM,GAAG,CAACa,CAAD,CAAZ;AACAb,YAAAA,GAAG,CAACa,CAAD,CAAH,GAAOb,GAAG,CAACa,CAAC,GAAC,CAAH,CAAV;AACAb,YAAAA,GAAG,CAACa,CAAC,GAAC,CAAH,CAAH,GAASnB,IAAT;AACD,WALmB,CAKnB;;AACF;AACF;AACF;;AACD,WAAOM,GAAP;AACD,GA/EY;AAgFb;AACAc,EAAAA,SAAS,EAAC,mBAAUd,GAAV,EAAe;AACvB,QAAGA,GAAG,CAACJ,MAAJ,GAAW,CAAd,EAAgB;AACd,aAAOI,GAAP;AACD;;AAAA;AACD,QAAIe,CAAC,GAACf,GAAG,CAAC,CAAD,CAAT;AACA,QAAIgB,OAAO,GAAC,EAAZ;AACA,QAAIC,QAAQ,GAAC,EAAb;;AACA,SAAI,IAAItB,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACK,GAAG,CAACJ,MAAlB,EAAyBD,CAAC,EAA1B,EAA6B;AAC3B,UAAGK,GAAG,CAACL,CAAD,CAAH,GAAOoB,CAAV,EAAY;AACVC,QAAAA,OAAO,CAAClB,IAAR,CAAaE,GAAG,CAACL,CAAD,CAAhB;AACD,OAFD,MAEM;AACJsB,QAAAA,QAAQ,CAACnB,IAAT,CAAcE,GAAG,CAACL,CAAD,CAAjB;AACD;AACF;;AACD,wCAAW,KAAKmB,SAAL,CAAeE,OAAf,CAAX,IAAmCD,CAAnC,sBAAwC,KAAKD,SAAL,CAAeG,QAAf,CAAxC;AACD,GAhGY;AAiGb;AACAC,EAAAA,SAAS,EAAE,mBAAWC,GAAX,EAAgB;AACzBA,IAAAA,GAAG,GAAGA,GAAG,IAAI,EAAb;AACA,QAAIC,KAAK,GAAG,6DAAZ;AACA,QAAIC,MAAM,GAAGD,KAAK,CAACxB,MAAnB;AACA,QAAI0B,GAAG,GAAG,EAAV;;AACA,SAAK,IAAI3B,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGwB,GAApB,EAAyBxB,CAAC,EAA1B,EAA8B;AAC5B2B,MAAAA,GAAG,IAAIF,KAAK,CAACb,MAAN,CAAagB,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBJ,MAA3B,CAAb,CAAP;AACD;;AACD,WAAOC,GAAP;AACD,GA3GY;AA4GbI,EAAAA,aAAa,EAAC,uBAAUC,GAAV,EAAe;AAC3B,QAAIC,IAAJ;;AACA,SAAKA,IAAL,IAAaD,GAAb,EAAkB;AAChB,aAAO,KAAP;AACD;;AACD,WAAO,IAAP;AACD;AAlHY,CAAf","sourcesContent":["\nexport default {\n  //数组去重\n  uniq1: function (array) {\n    var temp = []; //一个新的临时数组\n    for (var i = 0; i < array.length; i++) {\n      if (temp.indexOf(array[i]) == -1) {\n        temp.push(array[i]);\n      }\n    }\n    return temp;\n  },\n  uniq2:function (arr){\n    // var temp = {}, r = [], len = array.length, val, type;\n    //     // for (var i = 0; i < len; i++) {\n    //     //   val = array[i];\n    //     //   type = typeof val;\n    //     //   if (!temp[val]) {\n    //     //     temp[val] = [type];\n    //     //     r.push(val);\n    //     //   } else if (temp[val].indexOf(type) < 0) {\n    //     //     temp[val].push(type);\n    //     //     r.push(val);\n    //     //   }\n    //     // }\n    //     // return r;\n    //用键值来判断，新建一个对象\n    let hashTable = {};\n    let data = [];\n    for(let i=0,l=arr.length;i<l;i++) {\n      if(!hashTable[arr[i]]) {\n        hashTable[arr[i]] = true;\n        data.push(arr[i]);\n      }\n    }\n    return data\n  },\n//统计一个字符串出现最多的字母\n  findMaxDuplicateChar:function (str) {\n    if(str.length == 1) {\n      return str;\n    }\n    let charObj = {};\n    for(let i=0;i<str.length;i++) {\n      if(!charObj[str.charAt(i)]) {\n        charObj[str.charAt(i)] = 1;\n      }else{\n        charObj[str.charAt(i)] += 1;\n      }\n    }\n    let maxChar = '',\n      maxValue = 1;\n    for(var k in charObj) {\n      if(charObj[k] >= maxValue) {\n        maxChar = k;\n        maxValue = charObj[k];\n      }\n    }\n    return maxChar;\n},\n//冒泡排序\n  bubbleSort:function(arr,sequence){\n    for(var i=0;i<arr.length-1;i++){//i是从索引为零开始到数组的倒数第二个\n      for(var j=0;j<arr.length-i-1;j++){//j是从索引为0开始到\n        if(sequence===1){\n          if(arr[j]>arr[j+1]) {\n            var temp=arr[j];\n            arr[j]=arr[j+1];\n            arr[j+1]=temp;\n          }//从小到大排序\n        }else if(sequence===2){\n          if(arr[j]<arr[j+1]) {\n            var temp=arr[j];\n            arr[j]=arr[j+1];\n            arr[j+1]=temp;\n          }//从大到小排序\n        }\n      }\n    }\n    return arr;\n  },\n  //快速排序\n  quickSort:function (arr) {\n    if(arr.length<1){\n      return arr\n    };\n    let q=arr[0];\n    let leftArr=[];\n    let rightArr=[];\n    for(let i=1;i<arr.length;i++){\n      if(arr[i]<q){\n        leftArr.push(arr[i])\n      }else {\n        rightArr.push(arr[i])\n      }\n    }\n    return [...this.quickSort(leftArr),q,...this.quickSort(rightArr)];\n  },\n  //生成随机字符串\n  randomStr: function  (len) {\n    len = len || 32;\n    var chars = 'ABCDEFGHJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz12345678';\n    var maxPos = chars.length;\n    var pwd = '';\n    for (let i = 0; i < len; i++) {\n      pwd += chars.charAt(Math.floor(Math.random() * maxPos));\n    }\n    return pwd;\n  },\n  isEmptyObject:function (obj) {\n    var name;\n    for (name in obj) {\n      return false\n    }\n    return true;\n  }\n}\n"]}]}