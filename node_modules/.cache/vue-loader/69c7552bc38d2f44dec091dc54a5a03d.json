{"remainingRequest":"/Users/zhengsijie/Documents/testZsj/testVue/vue-sell-cube-zsj/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/zhengsijie/Documents/testZsj/testVue/vue-sell-cube-zsj/src/components/tab/tab.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/zhengsijie/Documents/testZsj/testVue/vue-sell-cube-zsj/src/components/tab/tab.vue","mtime":1551337500772},{"path":"/Users/zhengsijie/Documents/testZsj/testVue/vue-sell-cube-zsj/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zhengsijie/Documents/testZsj/testVue/vue-sell-cube-zsj/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/zhengsijie/Documents/testZsj/testVue/vue-sell-cube-zsj/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zhengsijie/Documents/testZsj/testVue/vue-sell-cube-zsj/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n  name: 'tab',\n  components:{\n\n  },\n   props: {\n    tabs: {\n      type: Array,\n      default() {\n        return []\n      }\n    },\n    initialIndex: {\n      type: Number,\n      default: 0\n    }\n  },\n  data() {\n    return {\n      index: this.initialIndex,\n       slideOptions: {\n        listenScroll: true,\n        probeType: 3,\n        directionLockThreshold: 0\n      }\n    }\n  },\n  computed: {\n    selectedLabel: {\n      get() {\n        return this.tabs[this.index].label\n      },\n      set(newValue){\n          this.index=this.tabs.findIndex((value)=>{\n              return value.label===newValue\n          })\n      }\n  \n    }\n  },\n  watch:{\n      selectedLabel(val){\n          console.log('ww:',val)\n      }\n  },\n  mounted() {\n      this.onChange(this.index)\n  },\n  methods: {\n    onChange(current){\n         this.index = current\n          const instance = this.$refs.tabComponents[current]\n          if (instance && instance.fetch) {\n          instance.fetch()\n          }\n    },\n    onScroll(pos){\n         const tabBarWidth=this.$refs.tabBar.$el.clientWidth;\n         const slideWidth = this.$refs.slide.slide.scrollerWidth;\n          const transform = -pos.x / slideWidth * tabBarWidth\n          this.$refs.tabBar.setSliderTransform(transform)\n    }\n  }\n}\n",{"version":3,"sources":["tab.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+BA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"tab.vue","sourceRoot":"src/components/tab","sourcesContent":["<template>\n  <div class=\"tab\">\n    <cube-tab-bar\n       :useTransition=false\n      :showSlider=true\n      v-model=\"selectedLabel\"\n      :data=\"tabs\"\n      ref=\"tabBar\"\n      class=\"border-bottom-1px\"\n    >\n    </cube-tab-bar>\n    <div class=\"slide-wrapper\">\n      <cube-slide\n        :loop=false\n        :auto-play=false\n        :show-dots=false\n        :initial-index=\"index\"\n        ref=\"slide\"\n        :options=\"slideOptions\"\n        @scroll=\"onScroll\"\n        @change=\"onChange\"\n      >\n        <cube-slide-item v-for=\"(tab,index) in tabs\" :key=\"index\">\n          <component ref=\"tabComponents\" :is=\"tab.component\" :data=\"tab.data\"></component>\n        </cube-slide-item>\n      </cube-slide>\n    </div>\n  </div>\n</template>\n\n<script>\n  export default {\n    name: 'tab',\n    components:{\n\n    },\n     props: {\n      tabs: {\n        type: Array,\n        default() {\n          return []\n        }\n      },\n      initialIndex: {\n        type: Number,\n        default: 0\n      }\n    },\n    data() {\n      return {\n        index: this.initialIndex,\n         slideOptions: {\n          listenScroll: true,\n          probeType: 3,\n          directionLockThreshold: 0\n        }\n      }\n    },\n    computed: {\n      selectedLabel: {\n        get() {\n          return this.tabs[this.index].label\n        },\n        set(newValue){\n            this.index=this.tabs.findIndex((value)=>{\n                return value.label===newValue\n            })\n        }\n    \n      }\n    },\n    watch:{\n        selectedLabel(val){\n            console.log('ww:',val)\n        }\n    },\n    mounted() {\n        this.onChange(this.index)\n    },\n    methods: {\n      onChange(current){\n           this.index = current\n            const instance = this.$refs.tabComponents[current]\n            if (instance && instance.fetch) {\n            instance.fetch()\n            }\n      },\n      onScroll(pos){\n           const tabBarWidth=this.$refs.tabBar.$el.clientWidth;\n           const slideWidth = this.$refs.slide.slide.scrollerWidth;\n            const transform = -pos.x / slideWidth * tabBarWidth\n            this.$refs.tabBar.setSliderTransform(transform)\n      }\n    }\n  }\n</script>\n\n<style lang=\"stylus\" scoped>\n  @import \"~common/stylus/variable\"\n  .tab\n    display: flex\n    flex-direction: column\n    height: 100%\n    >>> .cube-tab\n      padding: 10px 0\n    .slide-wrapper\n      flex: 1\n      overflow: hidden\n</style>\n"]}]}