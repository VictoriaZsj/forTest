{"remainingRequest":"/Users/zhengsijieZoe/Documents/vue/forTest/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/zhengsijieZoe/Documents/vue/forTest/src/components/testForCuizhijuzhong.vue?vue&type=template&id=f51feeb8&scoped=true&","dependencies":[{"path":"/Users/zhengsijieZoe/Documents/vue/forTest/src/components/testForCuizhijuzhong.vue","mtime":1557769478765},{"path":"/Users/zhengsijieZoe/Documents/vue/forTest/node_modules/cache-loader/dist/cjs.js","mtime":1554197108130},{"path":"/Users/zhengsijieZoe/Documents/vue/forTest/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1554197110423},{"path":"/Users/zhengsijieZoe/Documents/vue/forTest/node_modules/cache-loader/dist/cjs.js","mtime":1554197108130},{"path":"/Users/zhengsijieZoe/Documents/vue/forTest/node_modules/vue-loader/lib/index.js","mtime":1554197110423}],"contextDependencies":[],"result":["\n<div>\n<div class=\"ciuzhi\">\n  <!--使用绝对定位和负外边距-->\n  <div class=\"child1\">有一个小缺点：必须提前知道被居中块级元素的尺寸，否则无法准确实现垂直居中</div>\n  <!--使用绝对定位和transform-->\n  <!--<div class=\"child2\">不知道尺寸的时候</div>-->\n  <!--top和bottom设为相等的值-->\n  <!-- <div class=\"child3\">top和bottom设为相等的值</div> -->\n</div>\n<br>\n<br>\n<div class=\"ciuzhi2\">\n  <div class=\"child4\">\n    给父元素设置相等的上下内边距，则子元素自然是垂直居中的，当然这时候父元素是不能设置高度的\n  </div>\n</div>\n</div>\n",null]}